{
    "info": {
        "_postman_id": "35aaf23e-01e0-4825-8f43-fb238892695b",
        "name": "CTK-Privacy-4.0.0",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "N1",
            "item": [
                {
                    "name": "/PartyPrivacyProfileSpecification",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "472777f3-aac6-43de-823f-4a153595d7d5",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "",
                                    "",
                                    "        var requiredAttributes = ['href', 'id', 'partyPrivacyProfileSpecCharacteristic'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "",
                                    "",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileSpecCharacteristic attribute', function () { pm.expect(instance[\"partyPrivacyProfileSpecCharacteristic\"]).to.be.a('array'); });",
                                    "",
                                    "        pm.globals.set('HREFPPPS01', instance['href']);",
                                    "        pm.globals.set('IDPPPS01', instance['id']);",
                                    "",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "    });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfileSpecification",
                            "host": [
                                "{{Privacy}}partyPrivacyProfileSpecification"
                            ]
                        },
                        "description": "This operation retrieves a PartyPrivacyProfileSpecification"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N2",
            "item": [
                {
                    "name": "/PartyPrivacyProfileSpecification?fields=href",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "dab31913-4754-441f-8657-937f229b9460",
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfileSpecification?fields=href",
                            "host": [
                                "{{Privacy}}partyPrivacyProfileSpecification"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "href"
                                }
                            ]
                        },
                        "description": "This operation filter a PartyPrivacyProfileSpecification"
                    },
                    "response": []
                },
                {
                    "name": "/PartyPrivacyProfileSpecification?fields=id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "a040f661-69b4-4341-aa54-1ee51c6fd27a",
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfileSpecification?fields=id",
                            "host": [
                                "{{Privacy}}partyPrivacyProfileSpecification"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id"
                                }
                            ]
                        },
                        "description": "This operation filter a PartyPrivacyProfileSpecification"
                    },
                    "response": []
                },
                {
                    "name": "/PartyPrivacyProfileSpecification?id={{IDPPPS01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e2b61bfd-c739-40e9-8f9a-2eddb35e6c75",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "  ",
                                    "  ",
                                    "  ",
                                    "var jsonData = pm.response.json();",
                                    "  ",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "      ",
                                    "        var requiredAttributes = ['href', 'id', 'partyPrivacyProfileSpecCharacteristic'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileSpecCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileSpecCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPPS01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPPS01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPPS01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPPS02\")) {",
                                    "            pm.test('IDPPPS02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "          ",
                                    "    });",
                                    "  }",
                                    "  else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['href', 'id', 'partyPrivacyProfileSpecCharacteristic'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileSpecCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileSpecCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPPS01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPPS01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPPS01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPPS02\")) {",
                                    "            pm.test('IDPPPS02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "",
                                    "        ",
                                    "   ",
                                    "}",
                                    "  ",
                                    "  "
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfileSpecification?id={{IDPPPS01}}",
                            "host": [
                                "{{Privacy}}partyPrivacyProfileSpecification"
                            ],
                            "query": [
                                {
                                    "key": "id",
                                    "value": "{{IDPPPS01}}"
                                }
                            ]
                        },
                        "description": "This operation filter a PartyPrivacyProfileSpecification"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "E1",
            "item": [
                {
                    "name": "/PartyPrivacyProfileSpecification/404ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "2b3614e3-957d-4507-b55f-66111af52e1e",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});",
                                    "",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfileSpecification/55ccb398-9d6d-4c5b-a760-809ec9a748cf",
                            "host": [
                                "{{Privacy}}partyPrivacyProfileSpecification"
                            ],
                            "path": [
                                "55ccb398-9d6d-4c5b-a760-809ec9a748cf"
                            ]
                        },
                        "description": "This operation search for one of the created PartyPrivacyProfileSpecification"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N1",
            "item": [
                {
                    "name": "/PartyPrivacyProfile",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "913e4ca1-ed22-4fe2-b878-b33706a62e4a",
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData)) { ",
                                    "  ",
                                    "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                                    "  ",
                                    "",
                                    "}",
                                    "",
                                    "pm.test(\"Status code is 201\", function () {",
                                    "  pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "var instance = pm.response.json();",
                                    "var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "",
                                    "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "",
                                    "",
                                    "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "",
                                    "pm.globals.set('HREFPPP01', instance['href']);",
                                    "pm.globals.set('IDPPP01', instance['id']);",
                                    "",
                                    "pm.test('Body includes value held on href', function () {",
                                    "  pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "});",
                                    "pm.test('Body includes value held on id', function () {",
                                    "  pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"agreedByParty\": {\n    \"id\": \"9176\",\n    \"href\": \"https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/9176\",\n    \"name\": \"Sandy Smith\",\n    \"role\": \"owner\",\n    \"@referredType\": \"Individual\"\n  },\n  \"partyPrivacyProfileCharacteristic\": [\n    {\n        \"id\": \"43\",\n        \"name\": \"EmailAddress\",\n        \"privacyUsagePurpose\": \"INFORMATION\",\n        \"valueType\": \"boolean\",\n        \"value\": \"No\",\n        \"relatedParty\": [\n          {\n            \"id\": \"8632\",\n      \t\t\t\"href\": \"https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/8632\",\n      \t\t\t\"name\": \"John Doe\",\n      \t\t\t\"role\": \"Vendor\",\n      \t\t\t\"@referredType\": \"Individual\"\n          }\n        ]\n      }\n  ],\n  \"partyPrivacyProfileSpecification\": {\n    \"id\": \"PartyPrivacySpec_156bjhbjkbk57434\",\n    \"name\": \"Individual Privacy Spec\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ]
                        },
                        "description": "This operation creates a PartyPrivacyProfile"
                    },
                    "response": []
                },
                {
                    "name": "/PartyPrivacyProfile",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e6d32aed-7ec3-4ff3-ae21-33a04b0be055",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "  ",
                                    "  ",
                                    "  ",
                                    "var jsonData = pm.response.json();",
                                    "  ",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "      ",
                                    "        var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP02');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP02');});",
                                    "        }  ",
                                    "    });",
                                    "  }",
                                    "  else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP02');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP02');});",
                                    "        }",
                                    "   ",
                                    "  }",
                                    "  ",
                                    "  "
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ]
                        },
                        "description": "This operation search for the created PartyPrivacyProfile"
                    },
                    "response": []
                },
                {
                    "name": "/PartyPrivacyProfile/{{IDPPP01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "07c0ee34-89c3-4d5a-8602-810ccdcdf8ae",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "  ",
                                    "  ",
                                    "  ",
                                    "var jsonData = pm.response.json();",
                                    "  ",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "      ",
                                    "        var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('IDPPP02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "          ",
                                    "    });",
                                    "  }",
                                    "  else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('IDPPP02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "",
                                    "        ",
                                    "   ",
                                    "}",
                                    "  ",
                                    "  "
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile/{{IDPPP01}}",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ],
                            "path": [
                                "{{IDPPP01}}"
                            ]
                        },
                        "description": "This operation search for one of the created PartyPrivacyProfile"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N2",
            "item": [
                {
                    "name": "/PartyPrivacyProfile?fields=href",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "30a777fc-b8ea-448e-b364-b2d2926cf9e9",
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile?fields=href",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "href"
                                }
                            ]
                        },
                        "description": "This operation filter a PartyPrivacyProfile"
                    },
                    "response": []
                },
                {
                    "name": "/PartyPrivacyProfile?href={{HREFPPP01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "eb7813e9-eba6-4dc7-b8a6-3d624becdfa8",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "  ",
                                    "  ",
                                    "  ",
                                    "var jsonData = pm.response.json();",
                                    "  ",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "      ",
                                    "        var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('IDPPP02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "          ",
                                    "    });",
                                    "  }",
                                    "  else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('IDPPP02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "",
                                    "        ",
                                    "   ",
                                    "}",
                                    "  ",
                                    "  "
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile?href={{HREFPPP01}}",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ],
                            "query": [
                                {
                                    "key": "href",
                                    "value": "{{HREFPPP01}}"
                                }
                            ]
                        },
                        "description": "This operation filter a PartyPrivacyProfile"
                    },
                    "response": []
                },
                {
                    "name": "/PartyPrivacyProfile?fields=id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "18b48073-a5fc-4e40-8af0-86c883137fdb",
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile?fields=id",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id"
                                }
                            ]
                        },
                        "description": "This operation filter a PartyPrivacyProfile"
                    },
                    "response": []
                },
                {
                    "name": "/PartyPrivacyProfile?id={{IDPPP01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ad78448f-9c61-46ae-b625-f3aba80264ec",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "  ",
                                    "  ",
                                    "  ",
                                    "var jsonData = pm.response.json();",
                                    "  ",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "      ",
                                    "        var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('IDPPP02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "          ",
                                    "    });",
                                    "  }",
                                    "  else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['agreedByParty', 'href', 'id', 'partyPrivacyProfileCharacteristic', 'partyPrivacyProfileSpecification'];",
                                    "      ",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "      ",
                                    "      ",
                                    "      ",
                                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has partyPrivacyProfileCharacteristic attribute', function() { pm.expect(instance[\"partyPrivacyProfileCharacteristic\"]).to.be.a('array'); });",
                                    "      ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDPPP01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFPPP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPPP01');});",
                                    "            pm.test('id is ' + pm.globals.get(\"IDPPP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPPP01');});",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDPPP02\")) {",
                                    "            pm.test('IDPPP02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "",
                                    "        ",
                                    "   ",
                                    "}",
                                    "  ",
                                    "  "
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile?id={{IDPPP01}}",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ],
                            "query": [
                                {
                                    "key": "id",
                                    "value": "{{IDPPP01}}"
                                }
                            ]
                        },
                        "description": "This operation filter a PartyPrivacyProfile"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "E1",
            "item": [
                {
                    "name": "/PartyPrivacyProfile/404ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "3acbe271-aa5c-45f4-b737-630c5bf7ef1b",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});",
                                    "",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Privacy}}partyPrivacyProfile/588fb996-2f0a-411d-85b0-c2b4db8b1c49",
                            "host": [
                                "{{Privacy}}partyPrivacyProfile"
                            ],
                            "path": [
                                "588fb996-2f0a-411d-85b0-c2b4db8b1c49"
                            ]
                        },
                        "description": "This operation search for one of the created PartyPrivacyProfile"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        }
    ],
    "protocolProfileBehavior": {}
}